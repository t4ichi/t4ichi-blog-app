openapi: 3.0.3
info:
  title: t4ichi blog API
  description: t4ichi-blogのAPI
  version: 1.0.0
servers:
  - url: https://t4ichi.microcms.io/api/v1
    description: MicroCMS API Server

security:
  - ApiKeyAuth: []

paths:
  /ramen-tags:
    get:
      summary: ラーメンタグ一覧を取得
      tags:
        - ramen-tags
      operationId: getRamenTags
      parameters:
        - name: limit
          in: query
          description: 取得件数の上限
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          description: 取得開始位置
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: orders
          in: query
          description: ソート順
          schema:
            type: string
            example: "-createdAt"
        - name: q
          in: query
          description: 検索クエリ
          schema:
            type: string
        - name: fields
          in: query
          description: 取得するフィールドを指定
          schema:
            type: string
            example: "name,category"
        - name: filters
          in: query
          description: フィルター条件
          schema:
            type: string
            example: "category[equals]type"
      responses:
        '200':
          description: ラーメンタグ一覧の取得に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RamenTagListResponse'
        '400':
          description: リクエストパラメータが不正
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 指定されたAPIが見つからない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: リクエスト制限に達している
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /ramens:
    get:
      summary: ラーメン一覧を取得
      tags:
        - ramens
      operationId: getRamens
      parameters:
        - name: limit
          in: query
          description: 取得件数の上限
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          description: 取得開始位置
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: orders
          in: query
          description: ソート順
          schema:
            type: string
            example: "-createdAt"
        - name: q
          in: query
          description: 検索クエリ
          schema:
            type: string
        - name: fields
          in: query
          description: 取得するフィールドを指定
          schema:
            type: string
            example: "title,description,rating"
        - name: ids
          in: query
          description: 特定のIDのコンテンツのみ取得
          schema:
            type: string
            example: "id1,id2,id3"
        - name: filters
          in: query
          description: フィルター条件
          schema:
            type: string
            example: "tags[contains]ラーメン"
      responses:
        '200':
          description: ラーメン一覧の取得に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RamenListResponse'
        '400':
          description: リクエストパラメータが不正
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidLimit:
                  summary: limitパラメータが不正
                  value:
                    message: "クエリパラメータの \"limit\" に不正な値が指定されています。0以上100以下の数値を指定してください。"
                invalidOffset:
                  summary: offsetパラメータが不正
                  value:
                    message: "クエリパラメータの \"offset\" に不正な値が指定されています。0以上の数値を指定してください。"
                invalidQuery:
                  summary: クエリパラメータが不正
                  value:
                    message: "クエリパラメータに不正な値が指定されています。クエリパラメータの指定方法を確認し、正しい値を指定してください。"
                responseSizeLimit:
                  summary: レスポンスサイズ制限超過
                  value:
                    message: "レスポンスサイズが制限（約5MB）を超えています。"
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidApiKey:
                  summary: APIキーが不正
                  value:
                    message: "X-MICROCMS-API-KEY header is invalid."
        '404':
          description: 指定されたAPIが見つからない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '414':
          description: リクエストURLが長すぎる
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: リクエスト制限に達している
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /ramens/{id}:
    get:
      summary: 特定のラーメン情報を取得
      tags:
        - ramens
      operationId: getRamenById
      parameters:
        - name: id
          in: path
          required: true
          description: ラーメンID
          schema:
            type: string
        - name: fields
          in: query
          description: 取得するフィールドを指定
          schema:
            type: string
      responses:
        '200':
          description: ラーメン情報の取得に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ramen'
        '400':
          description: リクエストパラメータが不正
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidApiKey:
                  summary: APIキーが不正
                  value:
                    message: "X-MICROCMS-API-KEY header is invalid."
        '404':
          description: 指定されたIDのラーメンが見つからない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: リクエスト制限に達している
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

tags:
  - name: ramen-tags
    description: ラーメンタグ関連のAPI
  - name: ramens
    description: ラーメン関連のAPI

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-MICROCMS-API-KEY

  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: エラーメッセージ
      required:
        - message
      example:
        message: "X-MICROCMS-API-KEY header is invalid."

    RamenListResponse:
      type: object
      properties:
        contents:
          type: array
          items:
            $ref: '#/components/schemas/Ramen'
        totalCount:
          type: integer
          description: 総件数
          nullable: true
        offset:
          type: integer
          description: 取得開始位置
        limit:
          type: integer
          description: 取得件数の上限
      required:
        - contents
        - offset
        - limit

    Ramen:
      type: object
      properties:
        id:
          type: string
          description: ラーメンID
        createdAt:
          type: string
          format: date-time
          description: 作成日時
        updatedAt:
          type: string
          format: date-time
          description: 更新日時
        publishedAt:
          type: string
          format: date-time
          description: 公開日時
        revisedAt:
          type: string
          format: date-time
          description: 改訂日時
        title:
          type: string
          description: タイトル
        description:
          type: string
          nullable: true
          description: 説明
        images:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/MediaItem'
          description: 画像リスト
        visitDate:
          type: string
          format: date-time
          nullable: true
          description: 来店日
        tags:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/RamenTag'
          description: ラーメンタグ
        googleMapUrl:
          type: string
          nullable: true
          description: GoogleMapのURL
        tabelogUrl:
          type: string
          nullable: true
          description: 食べログのURL
        rating:
          type: number
          nullable: true
          minimum: 1
          maximum: 5
          description: 評価（1-5）
        price:
          type: number
          nullable: true
          description: 価格
      required:
        - id
        - createdAt
        - updatedAt
        - publishedAt
        - revisedAt
        - title

    RamenTagListResponse:
      type: object
      properties:
        contents:
          type: array
          items:
            $ref: '#/components/schemas/RamenTag'
        totalCount:
          type: integer
          description: 総件数
          nullable: true
        offset:
          type: integer
          description: 取得開始位置
        limit:
          type: integer
          description: 取得件数の上限
      required:
        - contents
        - offset
        - limit

    RamenTag:
      type: object
      properties:
        id:
          type: string
          description: タグID
        createdAt:
          type: string
          format: date-time
          description: 作成日時
        updatedAt:
          type: string
          format: date-time
          description: 更新日時
        publishedAt:
          type: string
          format: date-time
          description: 公開日時
        revisedAt:
          type: string
          format: date-time
          description: 改訂日時
        name:
          type: string
          description: タグ名
        category:
          type: array
          items:
            type: string
            enum:
              - type
              - area
              - feature
              - taste
              - price
              - atmosphere
              - service
          description: タグカテゴリ（配列形式）
        description:
          type: string
          nullable: true
          description: タグの説明
      required:
        - id
        - createdAt
        - updatedAt
        - publishedAt
        - revisedAt
        - name
        - category

    MediaItem:
      type: object
      properties:
        url:
          type: string
          description: 画像URL
        height:
          type: integer
          description: 画像の高さ
        width:
          type: integer
          description: 画像の幅
      required:
        - url
        - height
        - width
